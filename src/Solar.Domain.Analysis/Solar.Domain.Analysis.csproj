<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="14.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props" Condition="Exists('$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props')" />
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProjectGuid>{DA10B67C-DE09-4D20-82DF-392554464541}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>Solar.Domain.Analysis</RootNamespace>
    <AssemblyName>Solar.Domain.Analysis</AssemblyName>
    <TargetFrameworkVersion>v4.6.1</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>bin\Debug\</OutputPath>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <DebugType>pdbonly</DebugType>
    <Optimize>true</Optimize>
    <OutputPath>bin\Release\</OutputPath>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="LightInject, Version=4.0.8.0, Culture=neutral, processorArchitecture=MSIL">
      <HintPath>..\packages\LightInject.4.0.8\lib\net46\LightInject.dll</HintPath>
      <Private>True</Private>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.Core" />
    <Reference Include="Microsoft.CSharp" />
  </ItemGroup>
  <ItemGroup>
    <Compile Include="IContentAnalyzer.cs" />
    <Compile Include="LexicalAnalysis\EntityFactories\ITokenFactory.cs" />
    <Compile Include="LexicalAnalysis\EntityFactories\TokenFactory.cs" />
    <Compile Include="LexicalAnalysis\EntityFactories\RawData\TokenRawData.cs" />
    <Compile Include="LexicalAnalysis\LexicalAnalyzer.cs" />
    <Compile Include="SemanticAnalysis\ISemanticAnalyzer.cs" />
    <Compile Include="CompositionRoot.cs" />
    <Compile Include="SyntaxAnalysis\Entities\IAbstractSyntaxTree.cs" />
    <Compile Include="LexicalAnalysis\Entities\Token.cs" />
    <Compile Include="Properties\AssemblyInfo.cs" />
    <Compile Include="LexicalAnalysis\ILexicalAnalyzer.cs" />
    <Compile Include="SyntaxAnalysis\ISyntaxAnalyser.cs" />
    <Compile Include="LexicalAnalysis\ValueObjects\Lexem.cs" />
    <Compile Include="LexicalAnalysis\ValueObjects\TokenAttribute.cs" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\Solar.Domain.Grammar\Solar.Domain.Grammar.csproj">
      <Project>{1df046e6-3083-4ba2-b38a-138fba765ae2}</Project>
      <Name>Solar.Domain.Grammar</Name>
    </ProjectReference>
    <ProjectReference Include="..\Solar.Infrastructure.Common\Solar.Infrastructure.Common.csproj">
      <Project>{cc47ee27-0f13-4cfb-87dd-ac7163bc5375}</Project>
      <Name>Solar.Infrastructure.Common</Name>
    </ProjectReference>
  </ItemGroup>
  <ItemGroup>
    <None Include="packages.config" />
  </ItemGroup>
  <ItemGroup />
  <Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" />
  <!-- To modify your build process, add your task inside one of the targets below and uncomment it. 
       Other similar extension points exist, see Microsoft.Common.targets.
  <Target Name="BeforeBuild">
  </Target>
  <Target Name="AfterBuild">
  </Target>
  -->
</Project>